// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	public class Write
	{
		/// <summary>PID: 1 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int poll_1 = 1;
		/// <summary>PID: 1 | Type: write</summary>
		public const int poll = 1;
		/// <summary>PID: 1103 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingmanagerperiod_1103 = 1103;
		/// <summary>PID: 1103 | Type: write</summary>
		public const int pollingmanagerperiod = 1103;
		/// <summary>PID: 1105 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingmanagerperiodtype_1105 = 1105;
		/// <summary>PID: 1105 | Type: write</summary>
		public const int pollingmanagerperiodtype = 1105;
	}
	public class Pollingmanager
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerindex_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int pollingmanagerindex = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagername_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int pollingmanagername = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerperiod_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int pollingmanagerperiod = 1003;
			/// <summary>PID: 1004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerdefaultperiod_1004 = 1004;
			/// <summary>PID: 1004 | Type: read</summary>
			public const int pollingmanagerdefaultperiod = 1004;
			/// <summary>PID: 1005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerperiodtype_1005 = 1005;
			/// <summary>PID: 1005 | Type: read</summary>
			public const int pollingmanagerperiodtype = 1005;
			/// <summary>PID: 1006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerlastpoll_1006 = 1006;
			/// <summary>PID: 1006 | Type: read</summary>
			public const int pollingmanagerlastpoll = 1006;
			/// <summary>PID: 1007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerstatus_1007 = 1007;
			/// <summary>PID: 1007 | Type: read</summary>
			public const int pollingmanagerstatus = 1007;
			/// <summary>PID: 1099 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerdisplaykey_1099 = 1099;
			/// <summary>PID: 1099 | Type: read</summary>
			public const int pollingmanagerdisplaykey = 1099;
			public class Write
			{
				/// <summary>PID: 1108 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int pollingmanagerpoll_1108 = 1108;
				/// <summary>PID: 1108 | Type: write</summary>
				public const int pollingmanagerpoll = 1108;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerindex_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int pollingmanagerindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagername_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int pollingmanagername = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerperiod_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int pollingmanagerperiod = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerdefaultperiod_1004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int pollingmanagerdefaultperiod = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerperiodtype_1005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int pollingmanagerperiodtype = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerlastpoll_1006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int pollingmanagerlastpoll = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerstatus_1007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int pollingmanagerstatus = 6;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanagerdisplaykey_1099 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int pollingmanagerdisplaykey = 8;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 1  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Poll {get { return Protocol.GetParameter(1); }set { Protocol.SetParameter(1, value); }}
	/// <summary>PID: 1103  | Type: write</summary>
	public System.Object Pollingmanagerperiod {get { return Protocol.GetParameter(1103); }set { Protocol.SetParameter(1103, value); }}
	/// <summary>PID: 1105  | Type: write | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	public System.Object Pollingmanagerperiodtype {get { return Protocol.GetParameter(1105); }set { Protocol.SetParameter(1105, value); }}
	/// <summary>PID: 1108  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Pollingmanagerpoll {get { return Protocol.GetParameter(1108); }set { Protocol.SetParameter(1108, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	PollingmanagerQActionTable pollingmanager { get; set; }
	object Poll_1 { get; set; }
	object Poll { get; set; }
	object Pollingmanagerinit_dummy { get; set; }
	object Pollingmanagercheck_dummy { get; set; }
	object Pollingmanagerindex_1001 { get; set; }
	object Pollingmanagerindex { get; set; }
	object Pollingmanagername_1002 { get; set; }
	object Pollingmanagername { get; set; }
	object Pollingmanagerperiod_1003 { get; set; }
	object Pollingmanagerperiod { get; set; }
	object Pollingmanagerdefaultperiod_1004 { get; set; }
	object Pollingmanagerdefaultperiod { get; set; }
	object Pollingmanagerperiodtype_1005 { get; set; }
	object Pollingmanagerperiodtype { get; set; }
	object Pollingmanagerlastpoll_1006 { get; set; }
	object Pollingmanagerlastpoll { get; set; }
	object Pollingmanagerstatus_1007 { get; set; }
	object Pollingmanagerstatus { get; set; }
	object Pollingmanagerdisplaykey_1099 { get; set; }
	object Pollingmanagerdisplaykey { get; set; }
	object Pollingmanagerperiod_1103 { get; set; }
	object Pollingmanagerperiodtype_1105 { get; set; }
	object Pollingmanagerpoll_1108 { get; set; }
	object Pollingmanagerpoll { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public PollingmanagerQActionTable pollingmanager { get; set; }
	/// <summary>PID: 1  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Poll_1 {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 1  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Poll {get { return Write.Poll; }set { Write.Poll = value; }}
	/// <summary>PID: 998  | Type: dummy</summary>
	public System.Object Pollingmanagerinit_dummy {get { return GetParameter(998); }set { SetParameter(998, value); }}
	/// <summary>PID: 999  | Type: dummy</summary>
	public System.Object Pollingmanagercheck_dummy {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerindex_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Pollingmanagerindex {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagername_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Pollingmanagername {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerperiod_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Pollingmanagerperiod {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerdefaultperiod_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	public System.Object Pollingmanagerdefaultperiod {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: read | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerperiodtype_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: read | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	public System.Object Pollingmanagerperiodtype {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1006  | Type: read | EXCEPTIONS: Not Polled = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerlastpoll_1006 {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1006  | Type: read | EXCEPTIONS: Not Polled = -2</summary>
	public System.Object Pollingmanagerlastpoll {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1007  | Type: read | DISCREETS: Not Initialized = -2, Failed = -1, Disabled = 0, Succeeded = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerstatus_1007 {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1007  | Type: read | DISCREETS: Not Initialized = -2, Failed = -1, Disabled = 0, Succeeded = 1</summary>
	public System.Object Pollingmanagerstatus {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1099  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerdisplaykey_1099 {get { return GetParameter(1099); }set { SetParameter(1099, value); }}
	/// <summary>PID: 1099  | Type: read</summary>
	public System.Object Pollingmanagerdisplaykey {get { return GetParameter(1099); }set { SetParameter(1099, value); }}
	/// <summary>PID: 1103  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerperiod_1103 {get { return GetParameter(1103); }set { SetParameter(1103, value); }}
	/// <summary>PID: 1105  | Type: write | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerperiodtype_1105 {get { return GetParameter(1105); }set { SetParameter(1105, value); }}
	/// <summary>PID: 1108  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Pollingmanagerpoll_1108 {get { return GetParameter(1108); }set { SetParameter(1108, value); }}
	/// <summary>PID: 1108  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Pollingmanagerpoll {get { return Write.Pollingmanagerpoll; }set { Write.Pollingmanagerpoll = value; }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		pollingmanager = new PollingmanagerQActionTable(this, 1000, "pollingmanager");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class PollingmanagerQActionTable : QActionTable, IEnumerable<PollingmanagerQActionRow>
{
	public PollingmanagerQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<PollingmanagerQActionRow> GetEnumerator() { return new QActionTableEnumerator<PollingmanagerQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class PollingmanagerQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerindex_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Pollingmanagerindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagername_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Pollingmanagername { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerperiod_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Pollingmanagerperiod { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerdefaultperiod_1004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	public System.Object Pollingmanagerdefaultperiod { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerperiodtype_1005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	public System.Object Pollingmanagerperiodtype { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerlastpoll_1006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	public System.Object Pollingmanagerlastpoll { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerstatus_1007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1007 | Type: read</summary>
	public System.Object Pollingmanagerstatus { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1108 | Type: write</summary>
	public System.Object Pollingmanagerpoll_1108 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1108 | Type: write</summary>
	public System.Object Pollingmanagerpoll { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1099 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanagerdisplaykey_1099 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1099 | Type: read</summary>
	public System.Object Pollingmanagerdisplaykey { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	public PollingmanagerQActionRow() : base(0, 9) { }
	public PollingmanagerQActionRow(System.Object[] oRow) : base(0, 9, oRow) { }
	public static implicit operator PollingmanagerQActionRow(System.Object[] source) { return new PollingmanagerQActionRow(source); }
	public static implicit operator System.Object[](PollingmanagerQActionRow source) { return source.ToObjectArray(); }
}
}
