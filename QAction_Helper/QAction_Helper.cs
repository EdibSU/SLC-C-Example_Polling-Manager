// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 9 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int readme_9 = 9;
	/// <summary>PID: 9 | Type: read</summary>
	public const int readme = 9;
	public class Write
	{
		/// <summary>PID: 998 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingmanager_contextmenu_998 = 998;
		/// <summary>PID: 998 | Type: write</summary>
		public const int pollingmanager_contextmenu = 998;
		/// <summary>PID: 1053 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingmanager_interval_1053 = 1053;
		/// <summary>PID: 1053 | Type: write</summary>
		public const int pollingmanager_interval = 1053;
		/// <summary>PID: 1055 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingmanager_intervalconfig_1055 = 1055;
		/// <summary>PID: 1055 | Type: write</summary>
		public const int pollingmanager_intervalconfig = 1055;
	}
	public class Pollingmanager
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_id_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int pollingmanager_id = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_name_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int pollingmanager_name = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_interval_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int pollingmanager_interval = 1003;
			/// <summary>PID: 1004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_defaultinterval_1004 = 1004;
			/// <summary>PID: 1004 | Type: read</summary>
			public const int pollingmanager_defaultinterval = 1004;
			/// <summary>PID: 1005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_intervalconfig_1005 = 1005;
			/// <summary>PID: 1005 | Type: read</summary>
			public const int pollingmanager_intervalconfig = 1005;
			/// <summary>PID: 1006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_lastpoll_1006 = 1006;
			/// <summary>PID: 1006 | Type: read</summary>
			public const int pollingmanager_lastpoll = 1006;
			/// <summary>PID: 1007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_status_1007 = 1007;
			/// <summary>PID: 1007 | Type: read</summary>
			public const int pollingmanager_status = 1007;
			/// <summary>PID: 1008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_reason_1008 = 1008;
			/// <summary>PID: 1008 | Type: read</summary>
			public const int pollingmanager_reason = 1008;
			/// <summary>PID: 1010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_state_1010 = 1010;
			/// <summary>PID: 1010 | Type: read</summary>
			public const int pollingmanager_state = 1010;
			/// <summary>PID: 999 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_displaykey_999 = 999;
			/// <summary>PID: 999 | Type: read</summary>
			public const int pollingmanager_displaykey = 999;
			public class Write
			{
				/// <summary>PID: 1059 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int pollingmanager_poll_1059 = 1059;
				/// <summary>PID: 1059 | Type: write</summary>
				public const int pollingmanager_poll = 1059;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_id_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int pollingmanager_id = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_name_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int pollingmanager_name = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_interval_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int pollingmanager_interval = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_defaultinterval_1004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int pollingmanager_defaultinterval = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_intervalconfig_1005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int pollingmanager_intervalconfig = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_lastpoll_1006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int pollingmanager_lastpoll = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_status_1007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int pollingmanager_status = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_reason_1008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int pollingmanager_reason = 7;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_state_1010 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int pollingmanager_state = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int pollingmanager_displaykey_999 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int pollingmanager_displaykey = 10;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 998  | Type: write | DISCREETS: Poll All = 1, Separator 1 = -1, Disable = 2, Enable = 3, Force Disable = 4, Force Enable = 5, Separator 2 = -2, Disable All = 6, Enable All = 7</summary>
	public System.Object Pollingmanager_contextmenu {get { return Protocol.GetParameter(998); }set { Protocol.SetParameter(998, value); }}
	/// <summary>PID: 1053  | Type: write</summary>
	public System.Object Pollingmanager_interval {get { return Protocol.GetParameter(1053); }set { Protocol.SetParameter(1053, value); }}
	/// <summary>PID: 1055  | Type: write | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	public System.Object Pollingmanager_intervalconfig {get { return Protocol.GetParameter(1055); }set { Protocol.SetParameter(1055, value); }}
	/// <summary>PID: 1059  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Pollingmanager_poll {get { return Protocol.GetParameter(1059); }set { Protocol.SetParameter(1059, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	PollingmanagerQActionTable pollingmanager { get; set; }
	object Afterstartup_dummy { get; set; }
	object Readme_9 { get; set; }
	object Readme { get; set; }
	object Pollingmanager_runqaction_dummy { get; set; }
	object Pollingmanager_contextmenu_998 { get; set; }
	object Pollingmanager_contextmenu { get; set; }
	object Pollingmanager_displaykey_999 { get; set; }
	object Pollingmanager_displaykey { get; set; }
	object Pollingmanager_id_1001 { get; set; }
	object Pollingmanager_id { get; set; }
	object Pollingmanager_name_1002 { get; set; }
	object Pollingmanager_name { get; set; }
	object Pollingmanager_interval_1003 { get; set; }
	object Pollingmanager_interval { get; set; }
	object Pollingmanager_defaultinterval_1004 { get; set; }
	object Pollingmanager_defaultinterval { get; set; }
	object Pollingmanager_intervalconfig_1005 { get; set; }
	object Pollingmanager_intervalconfig { get; set; }
	object Pollingmanager_lastpoll_1006 { get; set; }
	object Pollingmanager_lastpoll { get; set; }
	object Pollingmanager_status_1007 { get; set; }
	object Pollingmanager_status { get; set; }
	object Pollingmanager_reason_1008 { get; set; }
	object Pollingmanager_reason { get; set; }
	object Pollingmanager_state_1010 { get; set; }
	object Pollingmanager_state { get; set; }
	object Pollingmanager_interval_1053 { get; set; }
	object Pollingmanager_intervalconfig_1055 { get; set; }
	object Pollingmanager_poll_1059 { get; set; }
	object Pollingmanager_poll { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public PollingmanagerQActionTable pollingmanager { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 9  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Readme_9 {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 9  | Type: read</summary>
	public System.Object Readme {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 990  | Type: dummy</summary>
	public System.Object Pollingmanager_runqaction_dummy {get { return GetParameter(990); }set { SetParameter(990, value); }}
	/// <summary>PID: 998  | Type: write | DISCREETS: Poll All = 1, Separator 1 = -1, Disable = 2, Enable = 3, Force Disable = 4, Force Enable = 5, Separator 2 = -2, Disable All = 6, Enable All = 7</summary>
	public System.Object Pollingmanager_contextmenu_998 {get { return GetParameter(998); }set { SetParameter(998, value); }}
	/// <summary>PID: 998  | Type: write | DISCREETS: Poll All = 1, Separator 1 = -1, Disable = 2, Enable = 3, Force Disable = 4, Force Enable = 5, Separator 2 = -2, Disable All = 6, Enable All = 7</summary>
	public System.Object Pollingmanager_contextmenu {get { return Write.Pollingmanager_contextmenu; }set { Write.Pollingmanager_contextmenu = value; }}
	/// <summary>PID: 999  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_displaykey_999 {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 999  | Type: read</summary>
	public System.Object Pollingmanager_displaykey {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_id_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Pollingmanager_id {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_name_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Pollingmanager_name {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_interval_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Pollingmanager_interval {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_defaultinterval_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	public System.Object Pollingmanager_defaultinterval {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: read | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_intervalconfig_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: read | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	public System.Object Pollingmanager_intervalconfig {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1006  | Type: read | EXCEPTIONS: Not Polled = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_lastpoll_1006 {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1006  | Type: read | EXCEPTIONS: Not Polled = -2</summary>
	public System.Object Pollingmanager_lastpoll {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1007  | Type: read | DISCREETS: Failed = 0, Succeeded = 1 | EXCEPTIONS: Not Polled = -2, Disabled = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_status_1007 {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1007  | Type: read | DISCREETS: Failed = 0, Succeeded = 1 | EXCEPTIONS: Not Polled = -2, Disabled = -1</summary>
	public System.Object Pollingmanager_status {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_reason_1008 {get { return GetParameter(1008); }set { SetParameter(1008, value); }}
	/// <summary>PID: 1008  | Type: read</summary>
	public System.Object Pollingmanager_reason {get { return GetParameter(1008); }set { SetParameter(1008, value); }}
	/// <summary>PID: 1010  | Type: read | DISCREETS: Disabled = 1, Enabled = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_state_1010 {get { return GetParameter(1010); }set { SetParameter(1010, value); }}
	/// <summary>PID: 1010  | Type: read | DISCREETS: Disabled = 1, Enabled = 2</summary>
	public System.Object Pollingmanager_state {get { return GetParameter(1010); }set { SetParameter(1010, value); }}
	/// <summary>PID: 1053  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_interval_1053 {get { return GetParameter(1053); }set { SetParameter(1053, value); }}
	/// <summary>PID: 1055  | Type: write | DISCREETS: Default Period = 1, Custom Period = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_intervalconfig_1055 {get { return GetParameter(1055); }set { SetParameter(1055, value); }}
	/// <summary>PID: 1059  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Pollingmanager_poll_1059 {get { return GetParameter(1059); }set { SetParameter(1059, value); }}
	/// <summary>PID: 1059  | Type: write | DISCREETS: Poll = 1</summary>
	public System.Object Pollingmanager_poll {get { return Write.Pollingmanager_poll; }set { Write.Pollingmanager_poll = value; }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		pollingmanager = new PollingmanagerQActionTable(this, 1000, "pollingmanager");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class PollingmanagerQActionTable : QActionTable, IEnumerable<PollingmanagerQActionRow>
{
	public PollingmanagerQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<PollingmanagerQActionRow> GetEnumerator() { return new QActionTableEnumerator<PollingmanagerQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class PollingmanagerQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_id_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Pollingmanager_id { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_name_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Pollingmanager_name { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_interval_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Pollingmanager_interval { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_defaultinterval_1004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	public System.Object Pollingmanager_defaultinterval { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_intervalconfig_1005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	public System.Object Pollingmanager_intervalconfig { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_lastpoll_1006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	public System.Object Pollingmanager_lastpoll { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_status_1007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1007 | Type: read</summary>
	public System.Object Pollingmanager_status { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_reason_1008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1008 | Type: read</summary>
	public System.Object Pollingmanager_reason { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1059 | Type: write</summary>
	public System.Object Pollingmanager_poll_1059 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1059 | Type: write</summary>
	public System.Object Pollingmanager_poll { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_state_1010 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1010 | Type: read</summary>
	public System.Object Pollingmanager_state { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 999 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingmanager_displaykey_999 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 999 | Type: read</summary>
	public System.Object Pollingmanager_displaykey { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	public PollingmanagerQActionRow() : base(0, 11) { }
	public PollingmanagerQActionRow(System.Object[] oRow) : base(0, 11, oRow) { }
	public static implicit operator PollingmanagerQActionRow(System.Object[] source) { return new PollingmanagerQActionRow(source); }
	public static implicit operator System.Object[](PollingmanagerQActionRow source) { return source.ToObjectArray(); }
}
}
